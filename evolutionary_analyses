-> Árvore de soja

A árvore dos genes de soja com o gene de Vmungo (VMungo1215G1788) como outgroup foi inferida com o IQTREE2.

Foi criada a variável tree_outgroup, lendo a árvore com a função tree_outgroup.
Depois foi criada outra variável aenas para obter a árvore bruta para obter os nomes dos nós para agrupamento. Depois a árvore foi visualizada com o ggtree, um pacote
que tem a função de visualizar árvores filogenéticas e dados associados heterogêneos com base na gramática de gráficos ggtree
fornece funções para visualizar a árvore filogenética e seus dados associados em R.
Depois foi criado um vetor de ordem de genes para reequilibrar fatores em gráficos adicionais, com a funão rev, que fornece uma versão invertida do argumento.
Dentro da função rev foi atribuida a função get_taxa_name, que extrai um vetor ordenado das pontas do clado selecionado ou da árvore inteira com base no gráfico ggtree().

-> Estrutura dos genes

Primeiramente foi feito o download do arquivo gff das funcionalidades dos éxons, importado para o R com a função import e atribuído à variável gff. Depois 
foi importada a seuqência PR-5 e atribuida à variável seqs_PR5.
Depois foram selecionados os genes que fazem parte do conjunto de genes em seqs_PR5 e são do tipo "gene", do arquivo gff (de funcionalidades de exons, apenas)
Depois foi atribuído à variável gene.str.genes$start o valor 1 e o comprimento de gene_str_genes à variável gene.str.genes$end.
Depois foi atribuido valores vazios para o outgroup, atribuindo o valor 1 para vmungo$start e vmungo$end e o nome em V.mungo$Name <- "Vmungo".


Depois foram selecionados os exons, através da seleção do tipo de gff = "exon" e que possuem os gff$genes_id dentro de seqs_PR5. Em seguida foram substituidos os
IDs dos genes apenas pelo número dos éxons na variável ID com a função gsub(). A função gsub() substituiu a aplavra exon e tudo que vinha antes dela, primeiramente por 
nada, depois pelo oq restou do conteúdo da variável ID.
Depois os exons foram divididos em grupos de acordo com o nome do gene, através da função split() divide um vetor ou quadro de dados em grupos de 
acordo com os parâmetros da função.
Depois 

Depois foram unidos os dois data.tables: gene.str.exons e ids, pelas variáveis Name e Gene_ID, usando a função left_join, que junta dois data.tables.
Em seguida, foi atribuido à variável Name as observações de name, com isso as colunas de name e Gene_name x e y formaram uma só coluna.
Em seguida, as variáveis gene.str.genes e v.mungo, foram unidas por linhas, com a função rbind.gene_str_plotdata$Name
Depois a variável gene_str_plotdata$Name, que contém os Gene_ids de ids, foi atribuída ao objeto ids$name (em ids$Gene_ID, que está presente em gene_str_plotdata$Name.
Depois, a variável gene_str_plotdata$Name foi atribuída a função fct_relevel, que reorganiza os níveis de um fator. Dessa forma, foi fornecido um fator à ser ordenado, o 
gene_str_plotdata$Name, e o nível de referência de ordenação, o gene_order_tree.
Depois foi atribuído à variável a função ggplot, que fez a plotagem da variável gene_str_plotdata, usando a estética de xmax = star e xmin = end, para plotar o inicio e o fim do gene. 
Dentro ainda dessa plotagem foi utilizada a função  geom_gene_arrow para definir o tamanho da seta (largura - width e altura - height) e a função geom_subgene_arrow, 
com a variável gene.str.exons como data, com a estética xsubmax = star e xsubmin= end, para definir o início e fim de cada éxon e os tamanhos das setas foram definidos
com os argumentos  arrowhead_height e arrowhead_width. Depois foram definidas as cores com a função scale_fill_manual, dentro da função ggplot. Depois foi utilizada a função 
scale_x_continuous, para definir a escala de x contínuo (expand = Constantes que garantem que os dados sejam colocados a alguma distância dos eixos.)
Por fim, foi utilizada a função theme_tree2, que é utilizada para dar um tema ao gráfico. Nessa caso, foi utilizado o argumento legend.position="none", para
atribuir nenhuma posição de legenda.
